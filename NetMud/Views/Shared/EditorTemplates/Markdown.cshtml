@using NetMud.Models
@using NetMud.DataStructure.Architectural

@model MarkdownString
@{
    double columnCount = ViewData["columnCount"] == null ? 5 : (int)ViewData["columnCount"];
    bool disabled = ViewData["disabled"] != null;
    var columnLabelValue = columnCount > 2 ? 1 : 2;
    var columnInputValue = (int)Math.Round(10 / columnCount);
    var cssClass = ViewData["cssClass"] == null ? "form-control" : ViewData["cssClass"];
    var forceOptional = ViewData["forceOptional"] != null;
    var noValidation = ViewData["noValidation"] != null;
    var archivedValue = ViewData["archivedValue"] == null ? "" : ViewData["archivedValue"].ToString();
    var ghostNameClass = "ghostNameTip";
    var strippedNaked = ViewData["strippedNaked"] != null;

    if (ViewData.ModelMetadata.IsRequired && !forceOptional)
    {
        ghostNameClass += " ghostRequired";
    }

    var htmlAttributes = new Dictionary<string, object>() { { "data-provide", "markdown" }, { "class", cssClass }, { "title", ViewData.ModelMetadata.DisplayName } };

    if (ViewData["disabled"] != null)
    {
        htmlAttributes.Add("disabled", true);
    }

    if (ViewData["htmlAttributes"] != null)
    {
        var additionalAttribs = ViewData["htmlAttributes"] as IDictionary<string, object>;
        if (additionalAttribs != null)
        {
            foreach (var kvp in additionalAttribs)
            {
                htmlAttributes.Add(kvp.Key, kvp.Value);
            }
        }
    }
}

@if (strippedNaked)
{
    @Html.DescriptionFor(m => m)
    @Html.TextAreaFor(m => m, 20, 80, htmlAttributes)
}
else
{
    <div class="col-sm-10">
        <span class="@ghostNameClass">@ViewData.ModelMetadata.DisplayName</span>

        @Html.DescriptionFor(m => m)
        @Html.TextAreaFor(m => m, 20, 80, htmlAttributes)

        @if (!string.IsNullOrWhiteSpace(archivedValue))
        {
            <span class="archive">Archived Value: @archivedValue</span>
            <span title="apply value to field" class="glyphicon glyphicon-plus archiveApply" onclick="javascript: $('#@ViewData.ModelMetadata.PropertyName').val('@archivedValue');"></span>
        }

        @if (!noValidation)
        {
            @Html.ValidationMessageFor(m => m, "", new { @class = "text-danger" })
        }
    </div>
}