@using NetMud.Data.Linguistic
@model Dictata
@{
    var archivedTemplate = ViewData["ArchiveTemplate"] as Dictata;
}
<h4>Details</h4>
<div class="form-group row">
    @Html.EditorFor(m => m.Name, new { archivedValue = archivedTemplate?.Name ?? "" })
    @Html.EditorFor(m => m.WordType)
    @Html.EditorFor(m => m.Language, new { validItems = ViewData["ValidLanguages"], archivedValue = archivedTemplate?.Language?.Name ?? "" })
    @Html.EditorFor(m => m.Tense, new { archivedValue = archivedTemplate?.Tense.ToString() ?? "" })
    @Html.EditorFor(m => m.Perspective, new { archivedValue = archivedTemplate?.Perspective.ToString() ?? "" })
</div>
<div class="form-group row">
    @Html.EditorFor(m => m.Severity, new { archivedValue = archivedTemplate?.Severity.ToString() ?? "" })
    @Html.EditorFor(m => m.Elegance, new { archivedValue = archivedTemplate?.Elegance.ToString() ?? "" })
    @Html.EditorFor(m => m.Quality, new { archivedValue = archivedTemplate?.Quality.ToString() ?? "" })
</div>
<div class="form-group row">
    @Html.EditorFor(m => m.Positional, new { archivedValue = archivedTemplate?.Positional.ToString() ?? "" })
    @Html.EditorFor(m => m.Determinant, new { archivedValue = archivedTemplate?.Determinant.ToString() ?? "" })
    @Html.EditorFor(m => m.Possessive, new { archivedValue = archivedTemplate?.Possessive.ToString() ?? "" })
    @Html.EditorFor(m => m.Plural, new { archivedValue = archivedTemplate?.Plural.ToString() ?? "" })
    @Html.EditorFor(m => m.Feminine, new { archivedValue = archivedTemplate?.Feminine.ToString() ?? "" })
</div>
<h4>Semantic Tags</h4>
@Html.EditorFor(m => m.Semantics)
<h4>Synonyms</h4>
@Html.EditorFor(m => m.Synonyms, new { validItems = ViewData["ValidWords"] })
<h4>Phrase Synonyms</h4>
@Html.EditorFor(m => m.PhraseSynonyms, new { validItems = ViewData["ValidPhrases"] })
<h4>Antonyms</h4>
@Html.EditorFor(m => m.Antonyms, new { validItems = ViewData["ValidWords"] })
<h4>Phrase Antonyms</h4>
@Html.EditorFor(m => m.PhraseAntonyms, new { validItems = ViewData["ValidPhrases"] })