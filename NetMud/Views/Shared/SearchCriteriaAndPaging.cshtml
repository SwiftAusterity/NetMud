@model Tuple<NetMud.Models.IPagedDataModel, string>

@{
    var prevPageState = Model.Item1.CurrentPageNumber > 1 ? String.Empty : "disabled";
    var nextPageState = Model.Item1.CurrentPageNumber < Model.Item1.NumberOfPages ? String.Empty : "disabled";
}
<div style="float: right;">
    @using (Html.BeginForm("Index", Model.Item2, FormMethod.Post, new { id = "paginationForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group row">
            @Html.EditorFor(m => m.Item1.SearchTerms, new { columnCount = 1, forceOptional = true, htmlAttributes = new Dictionary<string, object>() { { "onchange", "paginationForm.submit();" }, { "name", "SearchTerms" }, { "id", "SearchTerms" } } })
            @Html.EditorFor(m => m.Item1.ItemsPerPage, new { columnCount = 4, forceOptional = true, htmlAttributes = new Dictionary<string, object>() { { "onchange", "paginationForm.submit();" }, { "name", "ItemsPerPage" }, { "id", "ItemsPerPage" } } })
        </div>
        <div class="listPagination row">
            <div class="@prevPageState">
                <button class="pagingArrow" aria-label="Previous" value="@(Model.Item1.CurrentPageNumber - 1)" title="Previous" name="CurrentPageNumber"><span aria-hidden="true">&laquo;</span></button>
            </div>
            @for (var i = 1; i <= Model.Item1.NumberOfPages; i++)
            {
                if (Model.Item1.NumberOfPages > 5
                        && i != 1
                        && i != Model.Item1.NumberOfPages
                        && i > (Model.Item1.NumberOfPages / 2 + 1)
                        && i < (Model.Item1.NumberOfPages / 2 - 1))
                {
                    continue;
                }

                <div>
                    <button value="@i" title="@i" name="CurrentPageNumber">@i.ToString()</button>
                </div>
            }
            <div class="@nextPageState">
                <button class="pagingArrow" aria-label="Next" value="@(Model.Item1.CurrentPageNumber + 1)" title="Next" name="CurrentPageNumber"><span aria-hidden="true">&raquo;</span></button>
            </div>
        </div>
    }
</div>