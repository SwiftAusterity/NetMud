@model NetMud.Models.AsciiMapViewModel

<div class="roomAsciiMap">
    <p>
        <a id="TravelUp" name="TravelUp" class="Up" title="Up"><span class="glyphicon glyphicon-upload" aria-hidden="true"></span></a>
        <span id="levelIndicator" style="font-size:larger; color: blue;">Level @Model.ZIndex</span>
        <a id="TravelDown" name="TravelDown" class="Down" title="Down"><span class="glyphicon glyphicon-download" aria-hidden="true"></span></a>
    </p>
    <div>
        <pre id="expandedModelContainer" class="asciiMap" data-id="@Model.DataID" data-zindex="@Model.ZIndex"></pre>
    </div>
</div>

@Scripts.Render("/Scripts/adminModal.js")

<script type="text/javascript">
    $(function () {
        GetMap();

        $('#TravelUp').click(function () {
            var $exModelContainer = $("#expandedModelContainer");
            var currentZ = parseInt($exModelContainer.attr('data-zIndex'));
            var newZ = currentZ + 1;

            $exModelContainer.attr('data-zIndex', newZ);
            $('#levelIndicator').html('Level ' + newZ);

            GetMap();
        });

        $('#TravelDown').click(function () {
            var $exModelContainer = $("#expandedModelContainer");
            var currentZ = parseInt($exModelContainer.attr('data-zIndex'));
            var newZ = currentZ - 1;

            if (currentZ < 0)
                return;

            $exModelContainer.attr('data-zIndex', newZ);
            $('#levelIndicator').html('Level ' + newZ);

            GetMap();
        });
    });

    //RenderRoomForEditWithRadius, RenderWorldMap, RenderZoneMap
    function GetMap() {
        initModal();

        var $exModelContainer = $("#expandedModelContainer");
        var dataId = $exModelContainer.attr("data-id");
        var mapRenderType = '@Model.MapRenderType';
        var radius = '@Model.Radius';

        if (mapRenderType == 'RenderRoomForEditWithRadius') {
            var radius = $exModelContainer.attr("data-zindex");

            $.get('/api/AdminDataApi/' + mapRenderType + '/' + dataId + '/' + radius, function (data) {
                $exModelContainer.html(data);

                BindRoomsAndPaths();
            });
        } else if (mapRenderType == 'RenderLocaleMapForEdit') {
            var radius = $exModelContainer.attr("data-zindex");

            $.get('/api/AdminDataApi/' + mapRenderType + '/' + dataId, function (data) {
                $exModelContainer.html(data);

                BindRoomsAndPaths();
            });
        } else {
            var zIndex = $exModelContainer.attr("data-zindex");

            $.get('/api/AdminDataApi/' + mapRenderType + '/' + dataId + '/' + zIndex, function (data) {
                $exModelContainer.html(data);

                BindRoomsAndPaths();
            });
        }
    };

    function BindRoomsAndPaths() {
        $('.AdminAddPathway').click(function () {
            openFrameless(1400, 900, 0, 0, "/GameAdmin/Pathway/Add/" + $(this).attr('pathwayid') + '/' + $(this).attr('fromroom') + '/' + $(this).attr('toroom'), 'Add Pathway', true);

            return false;
        });

        $('.AdminEditPathway').click(function () {
            openFrameless(1400, 900, 0, 0, "/GameAdmin/Pathway/Edit/" + $(this).attr('pathwayid') + '/' + $(this).attr('fromroom') + '/' + $(this).attr('toroom'), 'Add Pathway', true);

            return false;
        });

        $('.AdminEditRoom').click(function () {
            openFrameless(1400, 900, 0, 0, "/GameAdmin/Room/Add/" + $(this).attr('roomid'), 'Add Pathway', true);

            return false;
        });

        $('.AdminAddInitialRoom').click(function () {
            openFrameless(1400, 900, 0, 0, "/GameAdmin/Room/Add/" + $(this).attr('localeid'), 'Add Initial Room', true);

            return false;
        });
    };
</script>
