@model NetMud.Models.PlayerManagement.ManageCharactersViewModel
@{
    var tableColumns = new Dictionary<string, Func<dynamic, string>>();
    var linkText = Html.ActionLink("99999999", "EditCharacter", new { id = 99999999 }).ToString();
    tableColumns.Add("ID", obj => linkText.Replace("99999999", obj.Id.ToString()));
    tableColumns.Add("Name", obj => obj.FullName());
    tableColumns.Add("Race", obj => obj.Race.Name);
    tableColumns.Add("Gender", obj => obj.Gender);
    tableColumns.Add("N00b", obj => obj.StillANoob.ToString());
    tableColumns.Add("Permissions", obj => obj.GamePermissionsRank.ToString());
}
@using (Html.BeginForm("RemoveCharacter", "Manage"))
{
    @Html.AntiForgeryToken()
    @Html.Partial("ListTable", new NetMud.Models.ListTableViewModel() { Name = "Registered Characters", Columns = tableColumns, Values = Model.authedUser.GameAccount.Characters, IncludeUnapprove = false })
}
<section id="newCharacterForm">
    @using (Html.BeginForm("AddCharacter", "Manage", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>New Character</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.EditorFor(m => m.NewCharacter, new { ValidRaces = Model.ValidRaces })

        @Html.Partial("SubmitButton", new NetMud.Models.SubmitButtonModel() { SubmitName = "Create", CancelName = "Cancel", ReturnAction = "ManageCharacters", ReturnController = "Manage", IncludeCancel = true})
    }
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}