@model NetMud.Models.PlayerManagement.ManageCharactersViewModel

@{
    ViewBag.Breadcrumbs = new Tuple<string, string[], string[]>("Manage Characters", new string[] { "Dashboard" }, new string[] { "/Manage" });
}

@{
    var tableColumns = new Dictionary<string, Func<dynamic, string>>();
    var linkText = Html.ActionLink("99999999", "EditCharacter", new { id = 88888888 }).ToString();
    tableColumns.Add("Name", obj => linkText.Replace("99999999", obj.FullName()).Replace("88888888", obj.Id.ToString()));
    tableColumns.Add("N00b", obj => obj.StillANoob.ToString());
    tableColumns.Add("Permissions", obj => obj.GamePermissionsRank.ToString());
}

@Html.Partial("ListTable", new NetMud.Models.ListTableViewModel() { EntityTypeName = "Manage", RemoveMethodName = "RemoveCharacter", Name = " ", Columns = tableColumns, Values = Model.AuthedUser.GameAccount.Characters, IncludeUnapprove = false })

<section id="newCharacterForm">
    @using (Html.BeginForm("AddCharacter", "Manage", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <h3>New Character</h3>
        <hr/>
        @Html.EditorFor(m => m.NewCharacter)

        @Html.Partial("SubmitButton", new NetMud.Models.SubmitButtonModel() { SubmitName = "Create", CancelName = "Cancel", ReturnAction = "ManageCharacters", ReturnController = "Manage", IncludeCancel = true })
    }
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}