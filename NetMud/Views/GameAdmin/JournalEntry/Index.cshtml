@model NetMud.Models.Admin.ManageJournalEntriesViewModel
@{
    var linkText = Html.ActionLink("99999999", "Edit", new { id = 99999999 }).ToString();
    var tableColumns = new Dictionary<string, Func<dynamic, string>>();
    tableColumns.Add("Id", obj => linkText.Replace("99999999", obj.Id.ToString()));
    tableColumns.Add("Subject", obj => obj.FitnessProblems ? string.Format("<span style='color:red;' title='{0}'>{1}</span>", String.Join(", ", obj.FitnessReport()), obj.Name) : obj.Name);
    tableColumns.Add("Body", obj => obj.Body);
    tableColumns.Add("Tags", obj => String.Join(",", obj.Tags));
    tableColumns.Add("Public", obj => obj.Public.ToString());
    tableColumns.Add("Minimum Read Level", obj => obj.MinimumReadLevel.ToString());
    tableColumns.Add("Forced Expire", obj => obj.Expired.ToString());
    tableColumns.Add("Publish On", obj => obj.PublishDate.ToShortDateString());
    tableColumns.Add("Expired On", obj => obj.ExpireDate.ToShortDateString());
}

@Html.Partial("AddContentLink")

@Html.Partial("SearchCriteriaAndPaging", new Tuple<NetMud.Models.IPagedDataModel, string>(Model, "JournalEntry"))

@using (Html.BeginForm("Remove", "JournalEntry"))
{
    @Html.AntiForgeryToken()
    @Html.Partial("ListTable", new NetMud.Models.ListTableViewModel() { Name = "Entries", Columns = tableColumns, Values = Model.CurrentPageOfItems.OrderBy(obj => obj.Id), IncludeDelete = true, IncludeUnapprove = true })
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}