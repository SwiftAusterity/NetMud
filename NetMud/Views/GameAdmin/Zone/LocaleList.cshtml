@model NetMud.Models.Admin.AddEditZoneDataViewModel
@{
    var prevPageState = Model.CurrentPageNumber > 1 ? string.Empty : "disabled";
    var nextPageState = Model.CurrentPageNumber < Model.NumberOfPages ? string.Empty : "disabled";

    var pathLinkText = Html.ActionLink("Add/EditPathway", "AddEditLocalePath", "Zone", new { localeId = 99999999, id = Model.DataObject.Id }, new { }).ToString();

    var linkText = Html.ActionLink("99999999", "Edit", "Locale", new { id = 99999999, zoneId = Model.DataObject.Id }, new { }).ToString();
    var tableColumns = new Dictionary<string, Func<dynamic, string>>();
    tableColumns.Add("ID", obj => linkText.Replace("99999999", obj.Id.ToString()));
    tableColumns.Add("Name", obj => obj.FitnessProblems ? string.Format("<span style='color:red;' title='{0}'>{1}</span>", string.Join(", ", obj.FitnessReport()), obj.Name) : obj.Name);
    tableColumns.Add("Pathway From Here", obj =>
        pathLinkText.Replace("99999999", obj.Id.ToString())
        .Replace("Add/EditPathway", Model.DataObject.GetLocalePathways().Any(path => ((NetMud.DataStructure.Base.EntityBackingData.IRoomData)path.Destination).ParentLocation.Id == obj.Id)
            ? "Edit Pathway to " + Model.DataObject.GetLocalePathways().FirstOrDefault(path => ((NetMud.DataStructure.Base.EntityBackingData.IRoomData)path.Destination).ParentLocation.Id == obj.Id).Destination.Name
            : "Add Pathway"));
    tableColumns.Add("Approved", obj => obj.Approved.ToString());
}

<div>
    @Html.ActionLink("Add New Locale", "Add", "Locale", new { zoneId = Model.DataObject.Id }, new { @class = "addNew" })
</div>

@if (Model.Items.Count() > 0)
{
    @Html.Partial("SearchCriteriaAndPaging", new Tuple<NetMud.Models.IPagedDataModel, string>(Model, "Locale"))

    using (Html.BeginForm("Remove", "Locale"))
    {
        @Html.AntiForgeryToken()
        @Html.Partial("ListTable", new NetMud.Models.ListTableViewModel() { Name = "Locales in this Zone", Columns = tableColumns, Values = Model.CurrentPageOfItems.OrderBy(obj => obj.Id) })
    }

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}