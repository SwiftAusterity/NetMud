@using NetMud.DataStructure.Base.Supporting
@using NetMud.DataStructure.Behaviors.Automation
@using NetMud.DataStructure.Behaviors.Actionable

@model NetMud.Models.Admin.AddEditRaceViewModel
@{
    ViewBag.Title = "Edit Race";

<section id="newCharacterForm">
    @using (Html.BeginForm("Edit", "Race", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" name="id" id="id" value="@Model.DataObject.Id" />
        <div class="form-group row">
            @Html.EditorFor(e => e.Name, new { columnCount = 3 })
            @Html.EditorFor(e => e.CollectiveNoun, new { columnCount = 3 })
        </div>

        <div class="form-group row">
            @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("StartingLocationId", "Starting Location", Model.ValidZones, Model.StartingLocationId))
            @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("RecallLocationId", "Recall Location", Model.ValidZones, Model.RecallLocationId))
        </div>

        <div class="form-group row">
            @Html.EditorFor(m => m.VisionRangeLow, new { columnCount = 3 })
            @Html.EditorFor(m => m.VisionRangeHigh, new { columnCount = 3 })
        </div>
        <div class="form-group row">
            @Html.EditorFor(m => m.TemperatureToleranceLow, new { columnCount = 3 })
            @Html.EditorFor(m => m.TemperatureToleranceHigh, new { columnCount = 3 })
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.Breathes, new { @class = "col-sm-1 col-form-label" })
            <div class="col-md-3">
                @Html.DropDownList("Breathes", Enum.GetNames(typeof(RespiratoryType)).Select(rl =>
                    new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(RespiratoryType), rl)).ToString(), Selected = rl.Equals(Enum.GetName(typeof(RespiratoryType), Model.Breathes)) })
                    , "Select One", htmlAttributes: new { id = "Breathes", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Breathes, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(m => m.DietaryNeeds, new { @class = "col-sm-1 col-form-label" })
            <div class="col-md-3">
                @Html.DropDownList("DietaryNeeds", Enum.GetNames(typeof(DietType)).Select(rl =>
                      new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(DietType), rl)).ToString(), Selected = rl.Equals(Enum.GetName(typeof(DietType), Model.DietaryNeeds)) })
                         , "Select One", htmlAttributes: new { id = "DietaryNeeds", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.DietaryNeeds, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(m => m.TeethType, new { @class = "col-sm-1 col-form-label" })
            <div class="col-md-3">
                @Html.DropDownList("TeethType", Enum.GetNames(typeof(DamageType)).Select(rl =>
                      new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString(), Selected = rl.Equals(Enum.GetName(typeof(DamageType), Model.TeethType)) })
                         , "Select One", htmlAttributes: new { id = "TeethType", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.TeethType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("BloodId", "Blood", Model.ValidMaterials, Model.BloodId))
            @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("HeadId", "Head", Model.ValidObjects, Model.HeadId))
            @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("TorsoId", "Torso", Model.ValidObjects, Model.TorsoId))
        </div>

        <div class="form-group row">
            @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("ArmsID", "Arms", Model.ValidObjects, Model.ArmsID))
            @Html.EditorFor(m => m.ArmsAmount, new { columnCount = 3 })
        </div>

        <div class="form-group row">
            @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("LegsID", "Legs", Model.ValidObjects, Model.LegsID))
            @Html.EditorFor(m => m.LegsAmount, new { columnCount = 3 })
        </div>

        @Html.Partial("~/Views/GameAdmin/Race/ExtraBodyParts.cshtml", Model)

        <div class="form-group row">
            @Html.EditorFor(e => e.HelpBody)
        </div>

        @Html.Partial("SubmitButton", new NetMud.Models.SubmitButtonModel() { SubmitName = "Save", CancelName = "Cancel", ReturnAction = "Index", ReturnController = "Race", IncludeCancel = true })

    }
</section>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}