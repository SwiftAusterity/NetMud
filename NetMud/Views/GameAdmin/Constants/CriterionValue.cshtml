@using NetMud.DataStructure.SupportingClasses

@model NetMud.Models.Admin.AddEditConstantsViewModel

<h3>Values</h3>
@if (Model.DataObject == null || Model.DataObject.Values == null || Model.DataObject.Values.Count == 0)
{
    @Html.LabelFor(m => m.ConstantValues)
    <a href="#" id="addValueRow" class="addRow">Add another row...</a>
    <div id="valueRows">
        <div class="form-group row">
            <label class="col-sm-1 col-form-label"><a href="#" class="removeRow" id="removeValueRow" title="Remove this">X</a></label>
            @Html.LabelFor(m => m.ConstantValues, new { @class = "col-sm-1 col-form-label" })
            <div class="col-md-3">
                @Html.TextAreaFor(m => m.ConstantValues, new { @class = "form-control" })
            </div>
        </div>
    </div>

    <h3>Criteria</h3>
    <a href="#" id="addCriterionRow" class="addRow">Add another row...</a>
    <div id="criterionRows">
        <div class="form-group row">
            <label class="col-sm-1 col-form-label"><a href="#" class="removeRow" id="removeCriterionRow" title="Remove this">X</a></label>
            @Html.LabelFor(m => m.CriterionTypes, new { @class = "col-sm-1 col-form-label" })
            <div class="col-md-3">
                @Html.DropDownList("CriterionTypes", Enum.GetNames(typeof(CriteriaType)).Select(rl =>
                                                                new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(CriteriaType), rl)).ToString() })
                                                                , htmlAttributes: new { id = "CriterionTypes", @class = "form-control" })
            </div>
            @Html.LabelFor(m => m.CriterionValues, new { @class = "col-sm-1 col-form-label" })
            <div class="col-md-3">
                @Html.TextBoxFor(m => m.CriterionValues, new { @class = "form-control" })
            </div>
        </div>
    </div>
}
else
{
    foreach (var criterion in Model.DataObject.Values)
    {
        @Html.LabelFor(m => m.ConstantValues)
        <a href="#" id="addValueRow" class="addRow">Add another row...</a>
        <div id="valueRows">
            @foreach (var dataItem in criterion.Value)
            {
                <div class="form-group row">
                    <label class="col-sm-1 col-form-label"><a href="#" class="removeRow" id="removeValueRow" title="Remove this">X</a></label>
                    @Html.LabelFor(m => m.ConstantValues, new { @class = "col-sm-1 col-form-label" })
                    <div class="col-md-3">
                        <textarea id="ConstantValues" name="ConstantValues" class="form-control">@dataItem</textarea>
                    </div>
                </div>
            }
        </div>
        <h3>Criteria</h3>
        <a href="#" id="addCriterionRow" class="addRow">Add another row...</a>
        <div id="criterionRows">
            @foreach (var dataItem in criterion.Key.Criterion)
            {
                <div class="form-group row">
                    <label class="col-sm-1 col-form-label"><a href="#" class="removeRow" id="removeCriterionRow" title="Remove this">X</a></label>
                    @Html.LabelFor(m => m.CriterionTypes, new { @class = "col-sm-1 col-form-label" })
                    <div class="col-md-3">
                        @Html.DropDownList("CriterionTypes", Enum.GetNames(typeof(CriteriaType)).Select(rl =>
                                                                new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(CriteriaType), rl)).ToString(), Selected = rl.Equals(dataItem.Key.ToString()) })
                                                                , htmlAttributes: new { id = "CriterionTypes", @class = "form-control" })
                    </div>
                    @Html.LabelFor(m => m.CriterionValues, new { @class = "col-sm-1 col-form-label" })
                    <div class="col-md-3">
                        <input id="CriterionValues" name="CriterionValues" class="form-control" value="@dataItem.Value" />
                    </div>
                </div>
            }
        </div>
    }
}


<script type="text/javascript">
    $(document).ready(function () {
        var criterionLabel = decodeHtml('@Html.LabelFor(m => m.CriterionTypes, new { @class = "col-sm-1 col-form-label" }).ToString().Replace(Environment.NewLine, "")');
        var criterionDropdown = decodeHtml('@Html.DropDownList("CriterionTypes", Enum.GetNames(typeof(CriteriaType)).Select(rl =>
                                                    new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(CriteriaType), rl)).ToString() })
                                                    , htmlAttributes: new { id = "CriterionTypes", @class = "form-control" }).ToString().Replace(Environment.NewLine, "")');
        var criterionValueLabel = decodeHtml('@Html.LabelFor(m => m.CriterionValues, new { @class = "col-sm-1 col-form-label" }).ToString().Replace(Environment.NewLine, "")');
        var criterionValueControl = decodeHtml('@Html.TextBoxFor(m => m.CriterionValues, new { @class = "form-control" }).ToString().Replace(Environment.NewLine, "")');
        var constantValueLabel = decodeHtml('@Html.LabelFor(m => m.ConstantValues, new { @class = "col-sm-1 col-form-label" }).ToString().Replace(Environment.NewLine, "")');
        var constantValueControl = decodeHtml('@Html.TextAreaFor(m => m.ConstantValues, new { @class = "form-control" }).ToString().Replace(Environment.NewLine, "")');

        $("#addCriterionRow").click(function () {
            $("#criterionRows").append(
                '<div class="form-group row">' +
                '<label class="col-sm-1 col-form-label"><a href="#" class="removeRow" id="removeCriterionRow" title="Remove this">X</a></label>' +
                criterionLabel + '<div class="col-md-3">' + criterionDropdown + '</div>' +
                criterionValueLabel + '<div class="col-md-3">' + criterionValueControl + '</div></div>'
            );

            $(".removeRow").click(function () {
                $(this).parent().parent().remove();
                return false;
            });
            return false;
        });

        $("#addValueRow").click(function () {
            $("#valueRows").append(
                '<div class="form-group row">' +
                '<label class="col-sm-1 col-form-label"><a href="#" class="removeRow" id="removeValueRow" title="Remove this">X</a></label>' +
                constantValueLabel + '<div class="col-md-3">' + constantValueControl + '</div></div>'
            );

            $(".removeRow").click(function () {
                $(this).parent().parent().remove();
                return false;
            });
            return false;
        });

        $(".removeRow").click(function () {
            $(this).parent().parent().remove();
            return false;
        });
    });
</script>