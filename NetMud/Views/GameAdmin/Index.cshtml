@using NetMud.DataStructure.Administrative

@model NetMud.Models.Admin.DashboardViewModel

<div id="tabs">
    <ul>
        <li><a href="#tabs-1">Templates</a></li>
        <li><a href="#tabs-2">Live Data</a></li>
        <li><a href="#tabs-3">Gossip</a></li>
        <li><a href="#tabs-4">Processes</a></li>
        <li><a href="#tabs-5">Global Configuration</a></li>
    </ul>
    <div id="tabs-1" data-tabNumber="1">
        <div class="adminDashboard">
            <div>
                <h4>Templates</h4>
                <dl class="dl-horizontal dashboardItem">
                    <dt>Worlds [@Html.ActionLink(Model.Worlds.Count().ToString(), "Index", "Gaia", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Gaia", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.Worlds.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.Worlds.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                    <dt>Zones [@Html.ActionLink(Model.Zones.Count().ToString(), "Index", "Zone", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Zone", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.Zones.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.Zones.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                    <dt>Locales [@Model.Locales.Count().ToString()]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Locale", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green; pointer-events: none", @title = "Add New", @enabled = "false" })
                        @if (Model.Locales.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.Locales.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                    <dt>Rooms [@Model.Rooms.Count().ToString()]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Room", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green; pointer-events: none", @title = "Add New", @enabled = "false" })
                        @if (Model.Rooms.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.Rooms.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                    <dt>NPCs [@Html.ActionLink(Model.NPCs.Count().ToString(), "Index", "NPC", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "NPC", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.NPCs.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.NPCs.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                    <dt>Items [@Html.ActionLink(Model.Inanimates.Count().ToString(), "Index", "Inanimate", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Inanimate", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.Inanimates.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.Inanimates.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                </dl>
            </div>
            <div>
                <h4>Administrative</h4>
                <dl class="dl-horizontal dashboardItem">
                    <dt>Journal Entries [@Html.ActionLink(Model.Journals.Count().ToString(), "Index", "JournalEntry", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "JournalEntry", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.Journals.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.Journals.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                    <dt>Help Files [@Html.ActionLink(Model.HelpFiles.Count().ToString(), "Index", "Help", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Help", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.HelpFiles.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.HelpFiles.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                    <dt>Languages [@Html.ActionLink(Model.Languages.Count().ToString(), "Index", "Language", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Language", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.Languages.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                    <dt>Dictata [@Html.ActionLink(Model.DictionaryWords.Count().ToString(), "Index", "Dictionary", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Dictionary", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.DictionaryWords.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                </dl>
            </div>
            <div>
                <h4>Supporting</h4>
                <dl class="dl-horizontal dashboardItem">
                    <dt>Races [@Html.ActionLink(Model.Races.Count().ToString(), "Index", "Race", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Race", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.Races.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.Races.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                    <dt>Celestial Bodies [@Html.ActionLink(Model.Celestials.Count().ToString(), "Index", "Celestials", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Celestials", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.Celestials.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.Celestials.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                    <dt>Materials [@Html.ActionLink(Model.Materials.Count().ToString(), "Index", "Material", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Material", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.Materials.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.Materials.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                    <dt>2D Models [@Html.ActionLink(Model.DimensionalModels.Count().ToString(), "Index", "DimensionalModel", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "DimensionalModel", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.DimensionalModels.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.DimensionalModels.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                </dl>
            </div>
            <div>
                <h4>Natural Resources</h4>
                <dl class="dl-horizontal dashboardItem">
                    <dt>Flora [@Html.ActionLink(Model.Flora.Count().ToString(), "Index", "Flora", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Flora", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.Flora.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.Flora.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                    <dt>Fauna [@Html.ActionLink(Model.Fauna.Count().ToString(), "Index", "Fauna", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Fauna", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.Fauna.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.Fauna.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                    <dt>Minerals [@Html.ActionLink(Model.Minerals.Count().ToString(), "Index", "Minerals", null, htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })]</dt>
                    <dd>
                        @Html.ActionLink(" ", "Add", "Minerals", null, htmlAttributes: new { @class = "glyphicon-plus-sign glyphicon", @style = "color: green;", @title = "Add New" })
                        @if (Model.Minerals.Any(r => r.FitnessProblems))
                        {
                            <span style="color:red;" class="glyphicon-exclamation-sign glyphicon" title="DATA PROBLEMS"></span>
                        }
                        @if (Model.Minerals.Any(r => r.State != ApprovalState.Approved))
                        {
                            <span style="color:orange;" class="glyphicon-exclamation-sign glyphicon" title="UNAPPROVED CONTENT"></span>
                        }
                    </dd>
                </dl>
            </div>
        </div>
    </div>
    <div id="tabs-2" data-tabNumber="2">
        <div class="adminDashboard">
            <h4>Live Data</h4>
            <dl class="dl-horizontal">
                <dt>Players:</dt>
                <dd>
                    @Model.LivePlayers [ @Html.ActionLink("Manage", "Index", "Player", htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" }) ]
                </dd>
                <dt>Worlds:</dt>
                <dd>
                    @Model.LiveWorlds [ @Html.ActionLink("Manage", "Worlds", "LiveAdmin", htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" })  ]
                </dd>
                <dt>Zones:</dt>
                <dd>
                    @Model.LiveZones [ @Html.ActionLink("Manage", "Zones", "LiveAdmin", htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" }) ]
                </dd>
                <dt>Locales:</dt>
                <dd>
                    @Model.LiveLocales [ @Html.ActionLink("Manage", "Locales", "LiveAdmin", htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" }) ]
                </dd>
                <dt>Rooms:</dt>
                <dd>
                    @Model.LiveRooms [ @Html.ActionLink("Manage", "Rooms", "LiveAdmin", htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" }) ]
                </dd>
                <dt>Inanimates:</dt>
                <dd>
                    @Model.LiveInanimates [ @Html.ActionLink("Manage", "Inanimates", "LiveAdmin", htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" }) ]
                </dd>
                <dt>NPCs:</dt>
                <dd>
                    @Model.LiveNPCs [ @Html.ActionLink("Manage", "NPCs", "LiveAdmin", htmlAttributes: new { @style = "color: midnightblue;", @title = "Manage" }) ]
                </dd>
            </dl>
        </div>
    </div>
    <div id="tabs-3" data-tabNumber="3">
        <div>
            @Html.ActionLink("Restart Gossip Server", "RestartGossipServer", "GameAdmin", new { @class = "btn btn-default caution" })
        </div>
        <h4>Settings</h4>
        <section id="gossipConfig">
            @using (Html.BeginForm("GossipConfig", "GameAdmin", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group row">
                    @Html.EditorFor(m => m.ClientName)
                    @Html.EditorFor(m => m.ClientSecret)
                    @Html.EditorFor(m => m.ClientId)
                </div>
                <div class="form-group row">
                    @Html.EditorFor(m => m.GossipActive)
                    @Html.EditorFor(m => m.SuspendMultiplier)
                    @Html.EditorFor(m => m.SuspendMultiplierMaximum)
                </div>

                <h4>Supported Features</h4>
                @Html.EditorFor(m => m.SupportedFeatures, new { tagList = Model.GossipConfigDataObject.SupportedFeatures.ToArray() })

                <h4>Supported Channels</h4>
                @Html.EditorFor(m => m.SupportedChannels, new { tagList = Model.GossipConfigDataObject.SupportedChannels.ToArray() })


                @Html.Partial("SubmitButton", new NetMud.Models.SubmitButtonModel() { SubmitName = "Save", CancelName = "Cancel", ReturnAction = "Index", ReturnController = "GameAdmin", IncludeCancel = false })
            }
        </section>
    </div>
    <div id="tabs-4" data-tabNumber="4">
        <div>
            <h4>World State</h4>
            <dl class="dl-horizontal">
                <dt>Data Systems</dt>
                <dd>
                    @Html.ActionLink("Backup World", "BackupWorld", "GameAdmin", new { @class = "btn btn-default save" })
                    @Html.ActionLink("Suspend and Restore World", "RestoreWorld", "GameAdmin", new { @class = "btn btn-default caution" })
                </dd>
            </dl>
        </div>
        <div>
            <h4>Live Processes</h4>
            <div>
                <div>
                    @Html.ActionLink("Stop All", "StopAllRunningProcess", "GameAdmin", new { @class = "btn btn-default caution" })
                </div>
                <div class="liveProcess">
                    @foreach (var token in Model.LiveTaskTokens)
                    {
                        if (token.Value.IsCancellationRequested)
                        {
                            <div class="liveControls stop">
                                <span>Stopping @token.Key</span>
                            </div>
                        }
                        else
                        {
                            <div class="liveControls go">
                                @Html.ActionLink("Stop " + @token.Key, "StopRunningProcess", "GameAdmin", new { processName = token.Key }, new { @class = "btn btn-default stop" })
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div id="tabs-5" data-tabNumber="5">
        <h4>Settings</h4>
        <section id="globalConfig">
            @using (Html.BeginForm("GlobalConfig", "GameAdmin", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group row">
                    @Html.EditorFor(m => m.WebsocketPortalActive)
                    @Html.EditorFor(m => m.UserCreationActive)
                    @Html.EditorFor(m => m.AdminsOnly)
                </div>
                <h4>Death Recall Settings</h4>
                <div class="form-group row">
                    @Html.EditorFor(m => m.DeathRecallZone, new { validItems = Model.ValidZones })
                    @Html.EditorFor(m => m.DeathRecallCoordinateX)
                    @Html.EditorFor(m => m.DeathRecallCoordinateY)
                </div>
                <h4>Death Notice Settings</h4>
                <div class="form-group row">
                    @Html.EditorFor(m => m.DeathNoticeFrom)
                    @Html.EditorFor(m => m.DeathNoticeSubject)
                </div>
                <div class="form-group row">
                    @Html.EditorFor(m => m.DeathNoticeBody)
                </div>

                @Html.Partial("SubmitButton", new NetMud.Models.SubmitButtonModel() { SubmitName = "Save", CancelName = "Cancel", ReturnAction = "Index", ReturnController = "GameAdmin", IncludeCancel = false })
            }
        </section>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#tabs").tabs();
    });
</script>
