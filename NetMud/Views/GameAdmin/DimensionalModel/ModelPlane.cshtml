@using NetMud.DataStructure.Base.Supporting
@using NetMud.Utility

@model NetMud.Models.Admin.AddEditDimensionalModelDataViewModel

<div class="row">
    <div>
        @Html.DescriptiveLabelFor(m => m.ModelPlaneNames, new { @class = "col-sm-1 col-form-label" })
        @Html.TextBoxFor(m => m.ModelPlaneNames, new { @class = "col-sm-1" })
    </div>
    <div class="col-md-offset-0 col-md-10">
        @Html.DescriptiveLabelFor(m => m.CoordinateDamageTypes)
        @Html.DropDownList("CoordinateDamageTypes", Enum.GetNames(typeof(DamageType)).Select(rl =>
                new SelectListItem() { Text = ((DamageType)Enum.Parse(typeof(DamageType), rl)).GetDescription(), Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString() })
                            , htmlAttributes: new { id = "CoordinateDamageTypes", @class = "dimModelNode edge" })

        @Html.DropDownList("CoordinateDamageTypes", Enum.GetNames(typeof(DamageType)).Select(rl =>
                new SelectListItem() { Text = ((DamageType)Enum.Parse(typeof(DamageType), rl)).GetDescription(), Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString() })
                             , htmlAttributes: new { id = "CoordinateDamageTypes", @class = "dimModelNode exterior" })

        @Html.DropDownList("CoordinateDamageTypes", Enum.GetNames(typeof(DamageType)).Select(rl =>
                new SelectListItem() { Text = ((DamageType)Enum.Parse(typeof(DamageType), rl)).GetDescription(), Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString() })
                             , htmlAttributes: new { id = "CoordinateDamageTypes", @class = "dimModelNode exterior" })

        @Html.DropDownList("CoordinateDamageTypes", Enum.GetNames(typeof(DamageType)).Select(rl =>
                new SelectListItem() { Text = ((DamageType)Enum.Parse(typeof(DamageType), rl)).GetDescription(), Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString() })
                             , htmlAttributes: new { id = "CoordinateDamageTypes", @class = "dimModelNode interior" })

        @Html.DropDownList("CoordinateDamageTypes", Enum.GetNames(typeof(DamageType)).Select(rl =>
                new SelectListItem() { Text = ((DamageType)Enum.Parse(typeof(DamageType), rl)).GetDescription(), Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString() })
                            , htmlAttributes: new { id = "CoordinateDamageTypes", @class = "dimModelNode interior" })

        @Html.DropDownList("CoordinateDamageTypes", Enum.GetNames(typeof(DamageType)).Select(rl =>
                new SelectListItem() { Text = ((DamageType)Enum.Parse(typeof(DamageType), rl)).GetDescription(), Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString() })
                            , htmlAttributes: new { id = "CoordinateDamageTypes", @class = "dimModelNode center" })

        @Html.DropDownList("CoordinateDamageTypes", Enum.GetNames(typeof(DamageType)).Select(rl =>
                new SelectListItem() { Text = ((DamageType)Enum.Parse(typeof(DamageType), rl)).GetDescription(), Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString() })
                             , htmlAttributes: new { id = "CoordinateDamageTypes", @class = "dimModelNode interior" })

        @Html.DropDownList("CoordinateDamageTypes", Enum.GetNames(typeof(DamageType)).Select(rl =>
                new SelectListItem() { Text = ((DamageType)Enum.Parse(typeof(DamageType), rl)).GetDescription(), Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString() })
                             , htmlAttributes: new { id = "CoordinateDamageTypes", @class = "dimModelNode interior" })

        @Html.DropDownList("CoordinateDamageTypes", Enum.GetNames(typeof(DamageType)).Select(rl =>
                new SelectListItem() { Text = ((DamageType)Enum.Parse(typeof(DamageType), rl)).GetDescription(), Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString() })
                             , htmlAttributes: new { id = "CoordinateDamageTypes", @class = "dimModelNode exterior" })

        @Html.DropDownList("CoordinateDamageTypes", Enum.GetNames(typeof(DamageType)).Select(rl =>
                new SelectListItem() { Text = ((DamageType)Enum.Parse(typeof(DamageType), rl)).GetDescription(), Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString() })
                             , htmlAttributes: new { id = "CoordinateDamageTypes", @class = "dimModelNode exterior" })

        @Html.DropDownList("CoordinateDamageTypes", Enum.GetNames(typeof(DamageType)).Select(rl =>
                new SelectListItem() { Text = ((DamageType)Enum.Parse(typeof(DamageType), rl)).GetDescription(), Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString() })
                             , htmlAttributes: new { id = "CoordinateDamageTypes", @class = "dimModelNode edge" })
    </div>
</div>

<script>
    $(document).ready(function () {
        $('select.dimModelNode').each(function () {
            $(this).attr('data-value', $(this).children(':selected').val());
        }).on('change', function (ev) {
            $(this).attr('data-value', $(this).children(':selected').val());
        });
    });
</script>